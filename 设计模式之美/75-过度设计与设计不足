[TOC]

## 75 | 在实际项目开发中，如何避免过度设计？又如何避免设计不足？

-   问题：
    -   一种是**过度设计**。
    -   另一种是**设计不足**。

### 设计的初衷是提高代码质量

-   应用设计模式只是方法。最终的目的，也就是初心，是**提高代码质量**。
-   具体来说就是，提高代码的**可读性、可扩展性、可维护性**等。

-   实际上，设计原则和思想是心法，设计模式只是招式。掌握心法，以不变应万变，无招胜有招。**设计原则和思想比设计模式更加普适、重要**。

### 设计的过程是先有问题后有方案

-   **我们先要去分析代码存在的痛点，然后，再针对性地利用设计模式去改善**。

### 设计的应用场景是复杂代码

-   设计模式要干的事情就是解耦。而解耦的主要目的是应对代码的复杂性。**设计模式就是为了解决复杂代码问题而产生的**。

### 持续重构能有效避免过度设计

-   为了避免错误的需求预判导致的过度设计，我非常推崇持续重构的开发方法。
-   **持续重构不仅仅是保证代码质量的重要手段，也是避免过度设计的有效方法**。
-   在真正有痛点的时候，我们再去考虑用设计模式来解决，而不是一开始就为不一定实现的未来需求而应用设计模式。

### 避免设计不足的 3 个必要条件

-   首先，你要**有一定的理论知识的储备**。
-   其次，你还要**有一定的刻意训练**。
-   最后，你一定要**有代码质量意识，设计意识**。

### 不要脱离具体的场景去谈设计

-   **脱离具体的场景去谈论设计是否合理，都是空谈**。就像我们经常说的，脱离业务谈架构都是“耍流氓”。